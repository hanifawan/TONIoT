# -*- coding: utf-8 -*-
"""TONIoT.input

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lnzIx-fg7OvbiH1YgCvnlDEJKWwrx8Tg

# **head**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
path = "/content/drive/MyDrive/train_test_network.csv"

print(path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Now you can access the attributes on the DataFrame
print(df.head())

"""# **shape**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
path = "/content/drive/MyDrive/train_test_network.csv"

print(path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Now you can access the attributes on the DataFrame

print(df.shape)

"""# **columns**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
path = "/content/drive/MyDrive/train_test_network.csv"

print(path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Now you can access the attributes on the DataFrame

print(df.columns)

"""# **info**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
path = "/content/drive/MyDrive/train_test_network.csv"

print(path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Now you can access the attributes on the DataFrame

print(df.info())

"""# size

"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Path to your dataset
path = "/content/drive/MyDrive/train_test_network.csv"
print("Dataset Path:", path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Display first 5 rows
print("\nüìÑ First 5 Rows of Dataset:")
print(df.head())

# -----------------------------
# ‚úÖ Find size of dataset
# -----------------------------
print("\nüìä Dataset Size Information:")
print("Number of Rows:", df.shape[0])
print("Number of Columns:", df.shape[1])
print("Total Cells (Rows √ó Columns):", df.size)

"""# null values"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Path to your dataset
path = "/content/drive/MyDrive/train_test_network.csv"
print("Dataset Path:", path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Display first 5 rows
print("\nüìÑ First 5 Rows of Dataset:")
print(df.head())

# -----------------------------
# ‚úÖ Dataset Size
# -----------------------------
print("\nüìä Dataset Size Information:")
print("Number of Rows:", df.shape[0])
print("Number of Columns:", df.shape[1])
print("Total Cells (Rows √ó Columns):", df.size)

# -----------------------------
# ‚úÖ Null / Missing Values
# -----------------------------
print("\n‚ùó Checking for Null (Missing) Values:")
null_values = df.isnull().sum()
print(null_values)

"""# duplicate values"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Path to your dataset
path = "/content/drive/MyDrive/train_test_network.csv"
print("üìÇ Dataset Path:", path)

# Read the CSV file into a pandas DataFrame
df = pd.read_csv(path)

# Display first 5 rows
print("\nüìÑ First 5 Rows of Dataset:")
print(df.head())

# -----------------------------
# ‚úÖ Dataset Size
# -----------------------------
print("\nüìä Dataset Size Information:")
print("Number of Rows:", df.shape[0])
print("Number of Columns:", df.shape[1])
print("Total Cells (Rows √ó Columns):", df.size)

# -----------------------------
# ‚úÖ Null / Missing Values
# -----------------------------
print("\n‚ùó Checking for Null (Missing) Values:")
null_values = df.isnull().sum()
print(null_values)

# Total number of missing values
total_nulls = null_values.sum()
print("\nüî¢ Total Missing Values in Entire Dataset:", total_nulls)

# Columns with missing values only
print("\nüìã Columns with Missing Values:")
print(null_values[null_values > 0])

# -----------------------------
# ‚úÖ Duplicate Values
# -----------------------------
print("\nüìë Checking for Duplicate Rows:")
duplicate_count = df.duplicated().sum()
print("Total Duplicate Rows:", duplicate_count)

# Optional: show sample duplicate rows if they exist
if duplicate_count > 0:
    print("\nüîç Sample Duplicate Rows:")
    print(df[df.duplicated()].head())

# -----------------------------
# ‚úÖ Optional: Visualize Missing Data
# -----------------------------
plt.figure(figsize=(10, 5))
null_values.plot(kind='bar', color='skyblue')
plt.title('Missing Values per Column')
plt.xlabel('Columns')
plt.ylabel('Number of Missing Values')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

"""# Features"""

import pandas as pd

# Path to your dataset
path = "/content/drive/MyDrive/train_test_network.csv"

# Read the CSV file
df = pd.read_csv(path)

# -----------------------------
# ‚úÖ Find and Display Features
# -----------------------------
print("üß© DATASET FEATURES\n")

# 1Ô∏è‚É£ List all feature (column) names
print("üìã Feature Names:")
for col in df.columns:
    print("-", col)

# 2Ô∏è‚É£ Number of total features (columns)
print("\nüî¢ Total Number of Features:", len(df.columns))

# 3Ô∏è‚É£ Show data type of each feature
print("\nüìò Data Type of Each Feature:")
print(df.dtypes)

# 4Ô∏è‚É£ Count of unique values per feature
print("\nüî† Unique Value Count per Feature:")
print(df.nunique())

# 5Ô∏è‚É£ Summary of numeric features
print("\nüìà Summary of Numeric Features:")
print(df.describe())

# 6Ô∏è‚É£ Summary of categorical features
print("\nüî§ Summary of Categorical Features:")
print(df.describe(include=['object']))

"""# line chart

"""

# -------------------------------------------------------
# üìà Auto Line Chart for Any Dataset
# -------------------------------------------------------
import pandas as pd
import matplotlib.pyplot as plt

# 1Ô∏è‚É£ Load the dataset
path = "/content/drive/MyDrive/train_test_network.csv"
df = pd.read_csv(path)

# 2Ô∏è‚É£ Display dataset info
print("üìÑ First 5 Rows of Dataset:")
print(df.head())
print("\nüìä Dataset Columns:")
print(df.columns.tolist())

# 3Ô∏è‚É£ Automatically detect numeric columns
numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns.tolist()
print("\nüî¢ Numeric Columns Detected:")
print(numeric_cols)

# 4Ô∏è‚É£ Check if at least two numeric columns exist
if len(numeric_cols) >= 2:
    x_column = numeric_cols[0]
    y_column = numeric_cols[1]

    print(f"\n‚úÖ Plotting Line Chart: '{y_column}' vs '{x_column}'")

    # 5Ô∏è‚É£ Sample smaller portion if dataset is large
    df_sample = df[[x_column, y_column]].dropna().sample(n=1000, random_state=1)

    # 6Ô∏è‚É£ Plot the line chart
    plt.figure(figsize=(10,5))
    plt.plot(df_sample[x_column], df_sample[y_column], color='blue', linewidth=1.5)
    plt.title(f"Line Chart of '{y_column}' vs '{x_column}'", fontsize=14)
    plt.xlabel(x_column, fontsize=12)
    plt.ylabel(y_column, fontsize=12)
    plt.grid(True, linestyle='--', alpha=0.6)
    plt.tight_layout()
    plt.show()
else:
    print("‚ö†Ô∏è Not enough numeric columns found to create a line chart.")